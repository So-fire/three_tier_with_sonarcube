name: Build and Deploy App

on:
  push:
    branches: [ "main" ]

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=So-fire_three_tier_with_sonarcube  
            -Dsonar.organization=so-fire
          #ALWAYS MAKE SURE YOU INPUT YOUR SONARCUBE PROJECT NAME AND ORG IN TE TWO CODES ABOVE # 
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Set DockerHub Username as Environment Variable
        run: echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV

      - name: Build and Push via Docker Compose
        run: docker compose build && docker compose push

      
  deploy_to_ec2:
    needs: build_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy project files to EC2 (via SCP)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./docker-compose.yml,./.env,./application-code"
          target: "/home/ubuntu/fintech-app"

      - name: Deploy app on EC2 (via SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/fintech-app
            docker compose pull
            docker compose down
            docker compose up -d --remove-orphans